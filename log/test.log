2025-06-03 16:36:32 test_runner.py   [函数:test_case         ] [line:109] INFO -- 0.用例ID:1 模块:登录 场景:获取uuid 标题:成功获取uuid
2025-06-03 16:36:32 analyse_case.py  [函数:analyse_case      ] [line:48 ] INFO -- 1.解析请求数据, 请求数据为: {'method': 'get', 'url': 'http://60.204.225.104:9632/captchaImage', 'headers': None, 'params': None, 'data': None, 'json': None, 'files': None}
2025-06-03 16:36:32 send_request.py  [函数:send_http_request ] [line:28 ] INFO -- 2.发送HTTP请求, 响应内容为: {'status_code': 200, 'json_data': {'msg': '操作成功', 'code': 200, 'captchaOnOff': False}, 'response_time': 75.765}
2025-06-03 16:36:32 asserts.py       [函数:http_assert       ] [line:69 ] INFO -- 3.HTTP响应断言内容: 实际结果(200) ?== 预期结果(200)
2025-06-03 16:36:32 get_keywords.py  [函数:get_keyword       ] [line:33 ] ERROR -- jsonpath提取失败: 原本提取的元数据是{'status_code': 200, 'json_data': {'msg': '操作成功', 'code': 200, 'captchaOnOff': False}, 'response_time': 75.765}，提取的值是uuid
2025-06-03 16:36:32 extractor.py     [函数:json_extractor    ] [line:18 ] INFO -- 4.JSON提取, 根据{"uuid":"uuid"}提取数据, 此时全局变量为: {'uuid': None}
2025-06-03 16:36:32 test_runner.py   [函数:test_case         ] [line:109] INFO -- 0.用例ID:2 模块:登录 场景:登录 标题:正常登录获取token
2025-06-03 16:36:32 analyse_case.py  [函数:analyse_case      ] [line:48 ] INFO -- 1.解析请求数据, 请求数据为: {'method': 'post', 'url': 'http://60.204.225.104:9632/login', 'headers': {'content-type': 'application/json;charset=UTF-8'}, 'params': None, 'data': None, 'json': {'password': 'e10adc3949ba59abbe56e057f20f883e', 'username': 'admin', 'uuid': 'None', 'code': '2'}, 'files': None}
2025-06-03 16:36:35 send_request.py  [函数:send_http_request ] [line:19 ] INFO -- 登录请求等待3秒...
2025-06-03 16:36:35 send_request.py  [函数:send_http_request ] [line:28 ] INFO -- 2.发送HTTP请求, 响应内容为: {'status_code': 200, 'json_data': {'msg': '操作成功', 'code': 200, 'token': 'eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjVmMGIzMzY5LWQyNmItNGQ3Mi05YmE3LTU1MGZhZWZkODI3ZiJ9.QA0VZo-F-iobuvXSxsHY8bswKTDCVhnbCWAii21OGZmpZ4d1AGqb-apq_JLJhOv1mbnwY-CoX0I-sHKM4C0HeA'}, 'response_time': 181.782}
2025-06-03 16:36:35 base_asserts.py  [函数:main_assert       ] [line:89 ] INFO -- 3.HTTP多重响应断言内容(str): 预期结果(成功) ?in 实际结果({'status_code': 200, 'json_data': {'msg': '操作成功', 'code': 200, 'token': 'eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjVmMGIzMzY5LWQyNmItNGQ3Mi05YmE3LTU1MGZhZWZkODI3ZiJ9.QA0VZo-F-iobuvXSxsHY8bswKTDCVhnbCWAii21OGZmpZ4d1AGqb-apq_JLJhOv1mbnwY-CoX0I-sHKM4C0HeA'}, 'response_time': 181.782})
2025-06-03 16:36:35 base_asserts.py  [函数:main_assert       ] [line:83 ] INFO -- 3.HTTP多重响应断言内容(code): 预期结果(200) ?in 实际结果({'status_code': 200, 'json_data': {'msg': '操作成功', 'code': 200, 'token': 'eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjVmMGIzMzY5LWQyNmItNGQ3Mi05YmE3LTU1MGZhZWZkODI3ZiJ9.QA0VZo-F-iobuvXSxsHY8bswKTDCVhnbCWAii21OGZmpZ4d1AGqb-apq_JLJhOv1mbnwY-CoX0I-sHKM4C0HeA'}, 'response_time': 181.782})
2025-06-03 16:36:35 extractor.py     [函数:json_extractor    ] [line:18 ] INFO -- 4.JSON提取, 根据{"token":"token"}提取数据, 此时全局变量为: {'uuid': None, 'token': 'eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjVmMGIzMzY5LWQyNmItNGQ3Mi05YmE3LTU1MGZhZWZkODI3ZiJ9.QA0VZo-F-iobuvXSxsHY8bswKTDCVhnbCWAii21OGZmpZ4d1AGqb-apq_JLJhOv1mbnwY-CoX0I-sHKM4C0HeA'}
